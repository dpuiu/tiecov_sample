#!/usr/bin/env pypy3

"""
Script that takes as input a file generated by samtools depth and aggregates the coverage

Example:
  samtools depth s1.cram s2.cram -r chrM |head -n 3
  #ref	pos	s1_cov	s2_cov
  chrM	1	0	100
  chrM	2	1	101
  chrM	3	2	120

  samtools depth sammple1.cram sample2.cram  -r chrM | sys.argv[0]   | head -n 3
  #ref	begin	end	#samples
  chrM	0	1	1
  chrM	1	2	2
  chrM	2	3	2

Usage examples:
    cat input.bedgraph |  sys.argv[1]
"""

import sys
import signal
signal.signal(signal.SIGPIPE, signal.SIG_DFL)

def main():
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)

    for lineno, line in enumerate(sys.stdin, 1):
        fields = line.strip().split('\t')
        if len(fields) < 2:
            sys.stderr.write(f"Error on line {lineno}: fewer than 2 fields\n")
            sys.exit(1)

        try:
            nonzero_count = sum(1 for x in fields[2:] if int(x) != 0)
        except ValueError as e:
            sys.stderr.write(f"Error on line {lineno}: non-integer value in fields[2:]\n")
            sys.exit(1)

        if nonzero_count > 0:
            chrom = fields[0]
            start = int(fields[1]) - 1
            end = fields[1]
            print(f"{chrom}\t{start}\t{end}\t{nonzero_count}")

if __name__ == "__main__":
    main()
